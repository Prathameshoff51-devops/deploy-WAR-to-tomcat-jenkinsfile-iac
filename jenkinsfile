pipeline{
    agent any
    tools{
        maven 'Maven'  //goto->tools onfig-> you can see Maven name as a target so ot will automaticlly name version mentioned there.
    } 

    stages{
        stage("Test"){
            steps{
                sh 'mvn test'
                echo "========executing  Test========"
            }

        }

                stage("Build"){
            steps{
                sh 'mvn configure'    //or check with mvn install 
                //here no need to cpy our WAR file on nex step becaz everthing is running on single workspace only but in previous videos every step as different workspce thats why need to move WAR files to next job.
                echo "========executing Build========"
            }

        }

                stage("Deploying on Test."){
            steps{
                deploy adapters: [tomcat9(credentialsId: 'tomcatserverdetails', path: '', url: 'http://3.129.57.149:8080')], contextPath: '/app', war: '**/*.war'  
                //goto generate script=> WAR file- **/*.war, contaxpath - //app, credentionls - add (for cred- /opt/tomcat/conf/ tomcat-user.xml- vi file and add<user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/> )
                //tomcat servr url - http://3.129.57.149:8080 => generate script
                echo "========Deployed on Test========"
            }

        }

                stage("Deploying on Prod."){
            steps{
                deploy adapters: [tomcat9(credentialsId: 'tomcatserverdetails', path: '', url: 'http://3.129.57.149:8080')], contextPath: '/app', war: '**/*.war'
                echo "========Deployed on Prod.========"
            }

        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}
